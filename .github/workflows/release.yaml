name: release

on:
  push:
    tags: ["v*"]

permissions:
  contents: read

jobs:
  skip:
    runs-on: ubuntu-latest
    permissions:
      actions: write
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@002fdce3c6a235733a90a27c80493a3241e56863 # v2.12.1
        with:
          egress-policy: audit

      - name: Check for duplicate runs
        id: skip_check
        uses: fkirc/skip-duplicate-actions@f75f66ce1886f00957d99748a42c724f4330bdcf # v5.3.1

  check:
    needs: skip
    if: ${{ needs.skip.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@002fdce3c6a235733a90a27c80493a3241e56863 # v2.12.1
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: DeterminateSystems/nix-installer-action@21a544727d0c62386e78b4befe52d19ad12692e3 # v17
      - uses: DeterminateSystems/magic-nix-cache-action@def9f5a5c6a6b8751c0534e8813a5d0ad2635660 # v11

      - run: nix flake check --accept-flake-config

  build:
    needs: check
    if: ${{ always() && !failure() && !cancelled() }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@002fdce3c6a235733a90a27c80493a3241e56863 # v2.12.1
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: DeterminateSystems/nix-installer-action@21a544727d0c62386e78b4befe52d19ad12692e3 # v17
      - uses: DeterminateSystems/magic-nix-cache-action@def9f5a5c6a6b8751c0534e8813a5d0ad2635660 # v11

      - run: >
          nix build
          .#ts-server-linux-amd64
          .#ts-server-linux-arm64
          .#ts-server-linux-arm
          .#ts-server-windows-amd64
          .#ts-server-darwin-amd64
          .#ts-server-darwin-arm64

      - uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2.3.2
        with:
          generate_release_notes: true
          files: |-
            result*/bin/*

  package:
    needs: check
    if: ${{ always() && !failure() && !cancelled() }}
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@002fdce3c6a235733a90a27c80493a3241e56863 # v2.12.1
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: DeterminateSystems/nix-installer-action@21a544727d0c62386e78b4befe52d19ad12692e3 # v17
      - uses: DeterminateSystems/magic-nix-cache-action@def9f5a5c6a6b8751c0534e8813a5d0ad2635660 # v11

      - name: Set ENV
        shell: bash
        run: |
          REGISTRY=ghcr.io

          NR=${{ github.repository }}
          NAMESPACE="${NR%%/*}"
          REPOSITORY="${NR##*/}"

          TAG=${{ github.ref_name }}
          VERSION=${TAG#v}

          echo "REGISTRY=${REGISTRY}" >> $GITHUB_ENV
          echo "NAMESPACE=${NAMESPACE}" >> $GITHUB_ENV
          echo "REPOSITORY=${REPOSITORY}" >> $GITHUB_ENV
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: $REGISTRY
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & load images
        run: |
          nix build .#ts-server-linux-amd64-image && ./result | docker load
          nix build .#ts-server-linux-arm64-image && ./result | docker load
          nix build .#ts-server-linux-arm-image && ./result | docker load

      - name: Push images
        shell: bash
        run: |
          docker image tag $REPOSITORY:$VERSION-amd64 $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-amd64
          docker push $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-amd64

          docker image tag $REPOSITORY:$VERSION-arm64 $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-arm64
          docker push $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-arm64

          docker image tag $REPOSITORY:$VERSION-arm $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-arm
          docker push $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-arm

      - name: Push manifest
        shell: bash
        run: |
          docker manifest create $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION \
            $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-amd64 \
            $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-arm64 \
            $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-arm
          docker manifest annotate $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-amd64 --arch amd64
          docker manifest annotate $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-arm64 --arch arm64
          docker manifest annotate $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-arm --arch arm
          docker manifest push $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION

          docker manifest create $REGISTRY/$NAMESPACE/$REPOSITORY:latest \
            $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-amd64 \
            $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-arm64 \
            $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-arm
          docker manifest annotate $REGISTRY/$NAMESPACE/$REPOSITORY:latest $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-amd64 --arch amd64
          docker manifest annotate $REGISTRY/$NAMESPACE/$REPOSITORY:latest $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-arm64 --arch arm64
          docker manifest annotate $REGISTRY/$NAMESPACE/$REPOSITORY:latest $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-arm --arch arm

  tag:
    needs: check
    if: ${{ always() && !failure() && !cancelled() }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@002fdce3c6a235733a90a27c80493a3241e56863 # v2.12.1
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - run: git push origin "${{ github.ref_name }}:latest" --force
