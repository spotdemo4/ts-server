name: release

on:
  push:
    tags: ["v*"]

permissions:
  contents: read

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: DeterminateSystems/nix-installer-action@90bb610b90bf290cad97484ba341453bd1cbefea # v19
      - uses: DeterminateSystems/magic-nix-cache-action@565684385bcd71bad329742eefe8d12f2e765b39 # v13

      - run: nix flake check -L --accept-flake-config

  build:
    needs: check
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: DeterminateSystems/nix-installer-action@90bb610b90bf290cad97484ba341453bd1cbefea # v19
      - uses: DeterminateSystems/magic-nix-cache-action@565684385bcd71bad329742eefe8d12f2e765b39 # v13

      - run: |
          mkdir binaries

          nix build .#linux-amd64 --accept-flake-config
          tar czf ts-server-linux-amd64.tar.gz -C result/bin ts-server
          mv ts-server-linux-amd64.tar.gz binaries

          nix build .#linux-arm64 --accept-flake-config
          tar czf ts-server-linux-arm64.tar.gz -C result/bin ts-server
          mv ts-server-linux-arm64.tar.gz binaries

          nix build .#linux-arm --accept-flake-config
          tar czf ts-server-linux-arm.tar.gz -C result/bin ts-server
          mv ts-server-linux-arm.tar.gz binaries

          nix build .#darwin-arm64 --accept-flake-config
          tar czf ts-server-darwin-arm64.tar.gz -C result/bin ts-server
          mv ts-server-darwin-arm64.tar.gz binaries

          nix build .#windows-amd64 --accept-flake-config
          zip -j ts-server-windows-amd64.zip result/bin/ts-server.exe
          mv ts-server-windows-amd64.zip binaries

      - uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2.3.2
        with:
          generate_release_notes: true
          files: |-
            binaries/*

  package:
    needs: check
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: DeterminateSystems/nix-installer-action@90bb610b90bf290cad97484ba341453bd1cbefea # v19
      - uses: DeterminateSystems/magic-nix-cache-action@565684385bcd71bad329742eefe8d12f2e765b39 # v13

      - name: Set env
        shell: bash
        run: |
          REGISTRY=ghcr.io

          NR=${{ github.repository }}
          NAMESPACE="${NR%%/*}"
          REPOSITORY="${NR##*/}"

          TAG=${{ github.ref_name }}
          VERSION=${TAG#v}

          echo "REGISTRY=${REGISTRY}" >> $GITHUB_ENV
          echo "NAMESPACE=${NAMESPACE}" >> $GITHUB_ENV
          echo "REPOSITORY=${REPOSITORY}" >> $GITHUB_ENV
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & load images
        run: |
          nix build .#linux-amd64-image --accept-flake-config
          docker load < result

          nix build .#linux-arm64-image --accept-flake-config
          docker load < result

          nix build .#linux-arm-image --accept-flake-config
          docker load < result

      - name: Push images
        shell: bash
        run: |
          docker image tag $REPOSITORY:$VERSION-amd64 $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-amd64
          docker push $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-amd64

          docker image tag $REPOSITORY:$VERSION-arm64 $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-arm64
          docker push $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-arm64

          docker image tag $REPOSITORY:$VERSION-arm $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-arm
          docker push $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-arm

      - name: Push manifest
        shell: bash
        run: |
          docker manifest create $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION \
            $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-amd64 \
            $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-arm64 \
            $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-arm
          docker manifest annotate $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-amd64 --arch amd64
          docker manifest annotate $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-arm64 --arch arm64
          docker manifest annotate $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-arm --arch arm
          docker manifest push $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION

          docker manifest create $REGISTRY/$NAMESPACE/$REPOSITORY:latest \
            $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-amd64 \
            $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-arm64 \
            $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-arm
          docker manifest annotate $REGISTRY/$NAMESPACE/$REPOSITORY:latest $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-amd64 --arch amd64
          docker manifest annotate $REGISTRY/$NAMESPACE/$REPOSITORY:latest $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-arm64 --arch arm64
          docker manifest annotate $REGISTRY/$NAMESPACE/$REPOSITORY:latest $REGISTRY/$NAMESPACE/$REPOSITORY:$VERSION-arm --arch arm

  tag:
    needs: check
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - run: git push origin "${{ github.ref_name }}:latest" --force
